介绍之后解读远程调用模块的内容如何编排、介绍dubbo-rpc-api中的包结构设计以及最外层的的源码解析
一、介绍
dubbo-rpc-api中包结构
1、filter包：在进行服务引用时会进行一系列的过滤。其中包括了很多过滤器。
2、listener包：看上面两张服务引用和服务暴露的时序图，发现有两个listener，其中的逻辑实现就在这个包内
3、protocol包：这个包实现了协议的一些公共逻辑
4、proxy包：实现了代理的逻辑。
5、service包：其中包含了一个需要调用的方法等封装抽象。
6、support包：包括了工具类
7、最外层的实现。

下面的篇幅设计，本文会讲解最外层的源码和service下的源码，support包下的源码我会穿插在其他用到的地方一并讲解，filter、listener、protocol、proxy以及各类协议的实现各自用一篇来讲。

二、Invoker
该接口是实体域，它是dubbo的核心模型，其他模型都向它靠拢，或者转化成它，它代表了一个可执行体，
可以向它发起invoke调用，这个有可能是一个本地的实现，也可能是一个远程的实现，也可能是一个集群的实现。它代表了一次调用

三、Invocation
Invocation 是会话域，它持有调用过程中的变量，比如方法名，参数等。

四、Exporter
该接口是暴露服务的接口，定义了两个方法分别是获得invoker和取消暴露服务。

五、ExporterListener
该接口是服务暴露的监听器接口，定义了两个方法是暴露和取消暴露，参数都是Exporter类型的。

六、Protocol
该接口是服务域接口，也是协议接口，它是一个可扩展的接口，默认实现的是dubbo协议。定义了四个方法，关键的是服务暴露和引用两个方法。

七、Filter
该接口是invoker调用时过滤器接口，其中就只有一个invoke方法。在该方法中对调用进行过滤

八、InvokerListener
该接口是实体域的监听器，定义了两个方法，分别是服务引用和销毁的时候执行的方法。

九、Result
该接口是实体域执行invoke的结果接口，里面定义了获得结果异常以及附加值等方法。比较好理解我就不贴代码了。

十、ProxyFactory
该接口是代理工厂接口，它也是个可扩展接口，默认实现javassist，dubbo提供两种动态代理方法分别是javassist/jdk，该接口定义了三个方法，前两个方法是通过invoker创建代理，最后一个是通过代理来获得invoker

十一、RpcContext
该类就是远程调用的上下文，贯穿着整个调用，例如A调用B，然后B调用C。在服务B上，RpcContext在B之前将调用信息从A保存到B。开始调用C，并在B调用C后将调用信息从B保存到C。RpcContext保存了调用信息。

十二、RpcException
该类是rpc调用抛出的异常类，其中封装了五种通用的错误码。

十三、RpcInvocation
该类实现了Invocation接口，是rpc的会话域，其中的方法比较简单，主要是封装了上述的属性。

十四、RpcStatus
该类是rpc的一些状态监控，其中封装了许多的计数器，用来记录rpc调用的状态。

十五、EchoService
该接口是回声服务接口，定义了一个一个回声测试的方法，回声测试用于检测服务是否可用，回声测试按照正常请求流程执行，
能够测试整个调用是否通畅，可用于监控，所有服务自动实现该接口，只需将任意服务强制转化为EchoService，就可以用了

十六、GenericException
该方法是通用的异常类。

十七、GenericService
该接口是通用的服务接口，同样定义了一个类似invoke的方法


























