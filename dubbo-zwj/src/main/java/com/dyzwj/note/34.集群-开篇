介绍接下来集群分哪几部分来描述，介绍dubbo在集群中涉及到的几个功能，介绍dubbo-cluster下跟各个功能相关的接口
集群是同一个服务，被部署在了多个服务器上，每个服务器的任务都是一样的，是为了减少压力集中的问题，而集群中就会出现负载均衡、容错等问题。、
dubbo的集群涉及到以下几部分内容：

1、目录：Directory可以看成是多个Invoker的集合，但是它的值会随着注册中心中服务变化推送而动态变化，那么Invoker以及如何动态变化就是一个重点内容。
2、集群容错：Cluster 将 Directory 中的多个 Invoker 伪装成一个 Invoker，对上层透明，伪装过程包含了容错逻辑，调用失败后，重试另一个。
3、路由：dubbo路由规则，路由规则决定了一次dubbo服务调用的目标服务器，路由规则分两种：条件路由规则和脚本路由规则，并且支持可拓展。
4、负载均衡策略：dubbo支持的所有负载均衡策略算法。
5、配置：根据url上的配置规则生成配置信息
6、分组聚合：合并返回结果。
7、本地伪装：mork通常用于服务降级，mock只在出现非业务异常(比如超时，网络异常等)时执行
在官方网站上有一段介绍我觉得写的非常的好：

集群工作过程可分为两个阶段，第一个阶段是在服务消费者初始化期间，集群 Cluster 实现类为服务消费者创建 Cluster Invoker 实例，即上图中的 merge 操作。
第二个阶段是在服务消费者进行远程调用时。以 FailoverClusterInvoker 为例，该类型 Cluster Invoker 首先会调用 Directory 的 list 方法列举 Invoker 列表（可将 Invoker 简单理解为服务提供者）。
Directory 的用途是保存 Invoker，可简单类比为 List<invoker>。其实现类 RegistryDirectory 是一个动态服务目录，可感知注册中心配置的变化，
它所持有的 Inovker 列表会随着注册中心内容的变化而变化。每次变化后，RegistryDirectory 会动态增删 Inovker，并调用 Router 的 route 方法进行路由，
过滤掉不符合路由规则的 Invoker。当 FailoverClusterInvoker 拿到 Directory 返回的 Invoker 列表后，它会通过 LoadBalance 从 Invoker 列表中选择一个 Inovker。
最后 FailoverClusterInvoker 会将参数传给 LoadBalance 选择出的 Invoker 实例的 invoker 方法，进行真正的远程调用。

一、Cluster
该接口是集群容错接口，可以看到它是一个可扩展接口，默认实现FailoverCluster，当然它还会有其他的实现，每一种实现都代表了一种集群容错的方式，
具体有哪些，可以看下面文章的介绍，他们都在support包下面，在本文只是让读者知道接口的定义。那么它还定义了一个join方法，
作用就是把Directory对象变成一个 Invoker 对象用来后续的一系列调用。该Invoker代表了一个集群实现。似懂非懂就够了，后面看具体的实现会比较清晰

二、Configurator
该接口是配置规则的接口，定义了两个方法，第一个是配置规则，并且生成url，第二个是把配置配置到旧的url中，其实都是在url上应用规则

三、ConfiguratorFactory
该接口是Configurator的工厂接口，定义了一个getConfigurator方法来获得Configurator实例，比较好理解。

四、Directory
该接口是目录接口，Directory 代表了多个 Invoker，并且它的值会随着注册中心的服务变更推送而变化 。一个服务类型对应一个Directory。定义的两个方法也比较好理解

五、LoadBalance
该接口是负载均衡的接口，dubbo也提供了四种负载均衡策略，也会在下面文章讲解。

六、Merger
该接口是分组聚合，将某对象数组合并为一个对象。

七、Router
该接口是路由规则的接口，定义的两个方法，第一个方法是获得路由规则的url，第二个方法是筛选出跟规则匹配的Invoker集合。

八、RouterFactory
该接口是路由工厂接口，定义了获得路由实例的方法。





















